{"version":3,"file":"static/js/33.3dc41da9.chunk.js","mappings":"6QAEaA,EAAOC,EAAAA,EAAAA,GAAH,mFAMJC,EAAOD,EAAAA,EAAAA,EAAH,gE,SCsBjB,EAxBa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUN,GAASO,KAAKH,GAASI,MAAMC,QAAQC,IAChD,GAAE,CAACV,KAGF,8BACGG,EAAKQ,QACJ,SAACd,EAAD,UACGM,EAAKS,KAAI,SAAAC,GAAS,OACjB,SAAC,MAAD,UAA8BA,GAAlBA,EAAUC,GADL,OAKrB,SAACf,EAAD,UAAM,iDAIb,C,iICzBYgB,EAAYjB,EAAAA,EAAAA,IAAH,sGAIT,SAAAkB,GACT,OAAOA,EAAMC,SAAWD,EAAME,MAAMC,QAAQ,EAAG,EAChD,IAGUC,EAAStB,EAAAA,EAAAA,OAAH,kIAQNuB,EAAMvB,EAAAA,EAAAA,IAAH,uGAKD,SAAAkB,GAAK,OAAIA,EAAME,MAAMI,UAAUC,MAA1B,IAGPC,GAAa1B,EAAAA,EAAAA,GAAO2B,EAAAA,GAAP3B,CAAH,+UAGV,SAAAkB,GAAK,OAAIA,EAAME,MAAMC,QAAQ,EAAG,EAA3B,IAUD,SAAAH,GAAK,OAAIA,EAAME,MAAMI,UAAUI,KAA1B,I,SCftB,EAtBe,WACb,OACE,iCACE,SAACN,EAAD,WACE,SAACL,EAAD,WACE,UAACM,EAAD,YACE,SAACG,EAAD,CAAYG,GAAG,IAAf,SAAmB,UACnB,SAACH,EAAD,CAAYG,GAAG,UAAf,SAAyB,mBAI/B,2BACE,SAACZ,EAAD,CAAWE,SAAO,EAAlB,UACE,SAAC,EAAAW,SAAD,CAAUC,UAAU,yBAAK,wCAAzB,UACE,SAAC,KAAD,YAMX,C,0JCtBYhC,EAAOC,EAAAA,EAAAA,GAAH,mGAIR,SAAAkB,GAAK,OAAIA,EAAME,MAAMC,QAAQ,EAAxB,IAGDpB,EAAOD,EAAAA,EAAAA,EAAH,gE,SCwBjB,EA3BgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAO4B,EAAP,KAAgBC,EAAhB,KASA,OAPA1B,EAAAA,EAAAA,YAAU,YACR2B,EAAAA,EAAAA,IAAahC,GACVO,MAAK,SAAA0B,GACJF,EAAWE,EACZ,IACAzB,MAAMC,QAAQC,IAClB,GAAE,CAACV,KAEF,8BACG8B,EAAQnB,QACP,SAACd,EAAD,UACGiC,EAAQlB,KAAI,SAAAsB,GAAM,OACjB,SAAC,MAAD,UAAgCA,GAAfA,EAAOpB,GADP,OAKrB,SAACf,EAAD,UAAM,mDAIb,C,qNCVD,EAlBe,SAAC,GAAiB,IAAfoC,EAAc,EAAdA,QAChB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,oBACVC,OAAO,IACPC,aAAc,CAAEC,OAAQ,UACxBP,QAASA,GAGd,E,mBCbYQ,EAAc7C,EAAAA,EAAAA,IAAH,sJAIF,SAAAkB,GAAK,OAAIA,EAAME,MAAM0B,OAAOC,QAAvB,IACL,SAAA7B,GAAK,OAAIA,EAAME,MAAM0B,OAAOE,KAAvB,IAIdC,EAAUjD,EAAAA,EAAAA,IAAH,8CAIPkD,EAAMlD,EAAAA,EAAAA,IAAH,iFAMHmD,EAAanD,EAAAA,EAAAA,IAAH,6DAKVoD,EAAapD,EAAAA,EAAAA,GAAH,oFACJ,SAAAkB,GAAK,OAAIA,EAAME,MAAMC,QAAQ,EAAxB,IAGb,SAAAH,GAAK,OAAIA,EAAME,MAAM0B,OAAOO,KAAvB,IAGHC,EAAOtD,EAAAA,EAAAA,KAAH,uCACN,SAAAkB,GAAK,OAAIA,EAAME,MAAM0B,OAAOS,MAAvB,IAGHC,EAAWxD,EAAAA,EAAAA,GAAH,oEAKRD,EAAOC,EAAAA,EAAAA,GAAH,sEAGN,SAAAkB,GAAK,OAAIA,EAAME,MAAM0B,OAAOS,MAAvB,ICChB,EAlCc,SAAC,GAAmB,IAAjBE,EAAgB,EAAhBA,UACf,OACE,+BACE,UAACZ,EAAD,YACE,SAACI,EAAD,WACE,SAACC,EAAD,CAAKQ,IAAKD,EAAUC,IAAKC,IAAKF,EAAUG,WAE1C,UAACT,EAAD,YACE,SAACC,EAAD,UAAaK,EAAUG,SACvB,4BACE,yBAAG,gBACW,UAACN,EAAD,WAAOG,EAAUI,UAAU,WAEzC,SAACL,EAAD,UAAU,cACV,uBAAIC,EAAUK,YACd,SAACN,EAAD,UAAU,YACV,SAACzD,EAAD,UAAO0D,EAAUM,uBAM5B,E,UC/BKC,GAAqBC,EAAAA,EAAAA,IAAH,4IASXC,EAAOlE,EAAAA,EAAAA,GAAH,oEAEXgE,GAIOd,EAAMlD,EAAAA,EAAAA,IAAH,kIASHmE,EAAOnE,EAAAA,EAAAA,GAAH,oFAIN,SAAAkB,GAAK,OAAIA,EAAME,MAAM0B,OAAOO,KAAvB,IAGHe,EAAYpE,EAAAA,EAAAA,EAAH,8DAEX,SAAAkB,GAAK,OAAIA,EAAME,MAAM0B,OAAOS,MAAvB,ICjBhB,EAhBc,SAAC,GAA8B,IAA5Bc,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAWZ,EAAU,EAAVA,IAChC,OACE,UAACQ,EAAD,YACE,SAAC,EAAD,CAAKR,IAAKA,EAAKC,IAAKU,KACpB,SAACF,EAAD,UAAOE,KACP,SAACD,EAAD,UAAYE,MAGjB,E,oBCPKN,GAAqBC,EAAAA,EAAAA,IAAH,4IASXC,EAAOlE,EAAAA,EAAAA,GAAH,oEAEXgE,GAIOO,EAAUvE,EAAAA,EAAAA,IAAH,sGAMPwE,GAAaxE,EAAAA,EAAAA,GAAOyE,EAAAA,IAAPzE,CAAH,uCACZ,SAAAkB,GAAK,OAAIA,EAAME,MAAM0B,OAAOS,MAAvB,IAGHmB,EAAQ1E,EAAAA,EAAAA,GAAH,uCACP,SAAAkB,GAAK,OAAIA,EAAME,MAAM0B,OAAOS,MAAvB,IAGHoB,EAAU3E,EAAAA,EAAAA,EAAH,uCACT,SAAAkB,GAAK,OAAIA,EAAME,MAAM0B,OAAO8B,SAAvB,ICbhB,EAjBmB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5B,OACE,UAAC,EAAD,YACE,UAACP,EAAD,YACE,SAACC,EAAD,KACA,SAACE,EAAD,UAAQG,QAEV,SAACF,EAAD,UAAUG,MAGf,C,8JCXYC,GAAY/E,EAAAA,EAAAA,GAAOgF,EAAAA,GAAPhF,CAAH,wYAiBE,SAAAkB,GAAK,OAAIA,EAAME,MAAM0B,OAAOS,MAAvB,IAChB,SAAArC,GAAK,OAAIA,EAAME,MAAM0B,OAAOmC,IAAvB,IAILC,EAASlF,EAAAA,EAAAA,EAAH,2JAKR,SAAAkB,GAAK,OAAIA,EAAME,MAAM0B,OAAOO,KAAvB,IAIH8B,EAAWnF,EAAAA,EAAAA,GAAH,0GAOR0B,GAAa1B,EAAAA,EAAAA,GAAO2B,EAAAA,GAAP3B,CAAH,sS,SCGvB,EAtCqB,WAAO,IAAD,IACjBE,GAAYC,EAAAA,EAAAA,MAAZD,QACFkF,GAAWC,EAAAA,EAAAA,MAEXC,GAAgBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAErD,GAAkCrF,EAAAA,EAAAA,UAAS,MAA3C,eAAOqD,EAAP,KAAkBiC,EAAlB,KACA,GAAoCtF,EAAAA,EAAAA,WAAS,GAA7C,eAAOuF,EAAP,KAAmBC,EAAnB,KAUA,OARArF,EAAAA,EAAAA,YAAU,WACRqF,GAAc,IACdC,EAAAA,EAAAA,IAAWC,OAAO5F,IACfO,KAAKiF,GACLhF,MAAMC,QAAQC,KACdmF,SAAQ,kBAAMH,GAAc,EAApB,GACZ,GAAE,CAAC1F,KAGF,gCACE,SAAC6E,EAAD,CAAWlD,GAAIyD,EAAcU,QAA7B,SAAsC,YACrCL,IAAc,SAAC,KAAD,CAAQtD,QAASsD,IAC/BlC,IAAa,SAAC,KAAD,CAAOA,UAAWA,KAChC,SAACyB,EAAD,UAAQ,4BACR,UAACC,EAAD,YACE,yBACE,SAACzD,EAAD,CAAYG,GAAG,OAAf,SAAsB,YAExB,yBACE,SAACH,EAAD,CAAYG,GAAG,UAAf,SAAyB,kBAG7B,SAAC,EAAAC,SAAD,CAAUC,UAAU,yBAAK,wCAAzB,UACE,SAAC,KAAD,QAIP,C,0MCxCKkE,EAAW,gCACXC,EAAM,2CAECC,EAAmB,mCAAG,+GAERC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,4BAAyCC,IAFjC,cAEzBG,EAFyB,OAGzBC,EAAaD,EAASlE,KAAKoE,QAAQzF,KACvC,YAAqD,IAAlDE,EAAiD,EAAjDA,GAAIqD,EAA6C,EAA7CA,KAAMT,EAAuC,EAAvCA,MAAO4C,EAAgC,EAAhCA,YACdC,GAD8C,EAAnBC,aACf9C,GAASS,GAOzB,OANIoC,EAAU5F,OAAS,KACrB4F,EAAYA,EAAUE,UAAU,EAAG,IAAM,OAKpC,CAAE3F,GAAAA,EAAIyF,UAAAA,EAAW/C,IAHd8C,EAAW,0CACkBA,GACnC,kHAEL,IAb4B,kBAexBF,GAfwB,gCAiB/B3F,QAAQC,IAAI,KAAMgG,SAjBa,yDAAH,qDAqBnBf,EAAU,mCAAG,WAAM3F,GAAN,kHAECkG,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8B/F,EAA9B,YAAyCgG,IAF1C,cAEhBG,EAFgB,SAKpBA,EAASlE,KADHqE,EAJc,EAIdA,YAAa5C,EAJC,EAIDA,MAAOiD,EAJN,EAIMA,aAAc/C,EAJpB,EAIoBA,SAAUgD,EAJ9B,EAI8BA,OAE9CpD,EAAM8C,EAAW,0CACgBA,GACnC,kHACE3C,EAAYkD,KAAKC,KAAoB,GAAfH,GAEtB9C,EAAa+C,EAAOhG,KAAI,gBAAGE,EAAH,EAAGA,GAAIqD,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALrD,EAA3B,IAXR,kBAaf,CAAE0C,IAAAA,EAAKE,MAAAA,EAAOC,UAAAA,EAAWC,SAAAA,EAAUC,WAAAA,IAbpB,kCAetBpD,QAAQC,IAAI,KAAMgG,SAfI,0DAAH,sDAmBVpG,EAAS,mCAAG,WAAMN,GAAN,kGAEEkG,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACD/F,EADC,oBACkBgG,IAHpB,cAEfG,EAFe,OAMfhG,EAAOgG,EAASlE,KAAK9B,KAAKS,KAC9B,YAA4C,IAAzCuD,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWtD,EAAuB,EAAvBA,GAAIiG,EAAmB,EAAnBA,aAItB,MAAO,CACL5C,KAAAA,EACAC,UAAAA,EACAtD,GAAAA,EACA0C,IAPUuD,EAAY,0CACeA,GACnC,kHAOL,IAjBkB,kBAmBd5G,GAnBc,gCAqBrBM,QAAQC,IAAI,KAAMgG,SArBG,yDAAH,sDAyBT1E,EAAY,mCAAG,WAAMhC,GAAN,kGAEDkG,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACD/F,EADC,oBACkBgG,IAHjB,cAElBG,EAFkB,OAMlBrE,EAAUqE,EAASlE,KAAKoE,QAAQzF,KAAI,kBAA8B,CACtE+D,OADwC,EAAGA,OAE3C7D,GAFwC,EAAWA,GAGnD8D,QAHwC,EAAeA,QAAf,IANlB,kBAYjB9C,GAZiB,gCAcxBrB,QAAQC,IAAI,KAAMgG,SAdM,yDAAH,sDAkBZM,EAAiB,mCAAG,WAAMC,GAAN,kGAENf,EAAAA,EAAAA,IAAA,UAClBH,EADkB,8BACYkB,EADZ,sDACmEjB,IAH7D,cAEvBG,EAFuB,OAKvBC,EAAaD,EAASlE,KAAKoE,QAAQzF,KACvC,YAAuC,IAApCE,EAAmC,EAAnCA,GAAIqD,EAA+B,EAA/BA,KAAMT,EAAyB,EAAzBA,MAAO4C,EAAkB,EAAlBA,YACdC,EAAY7C,GAASS,EAOzB,OANIoC,EAAU5F,OAAS,KACrB4F,EAAYA,EAAUE,UAAU,EAAG,IAAM,OAKpC,CAAE3F,GAAAA,EAAIyF,UAAAA,EAAW/C,IAHd8C,EAAW,0CACkBA,GACnC,kHAEL,IAf0B,kBAiBtBF,GAjBsB,gCAmB7B3F,QAAQC,IAAI,KAAMgG,SAnBW,yDAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Layout/Layout.styled.js","components/Layout/Layout.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/Loader/Loader.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","components/Actor/Actor.styled.js","components/Actor/Actor.jsx","components/ReviewItem/ReviewItem.styled.jsx","components/ReviewItem/ReviewItem.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/movieAPI/movieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const Info = styled.p`\n  font-style: italic;\n  color: white;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/movieAPI/movieAPI';\nimport { Actor } from 'components';\nimport { Info, List } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCast(movieId).then(setCast).catch(console.log);\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length ? (\n        <List>\n          {cast.map(actorInfo => (\n            <Actor key={actorInfo.id} {...actorInfo} />\n          ))}\n        </List>\n      ) : (\n        <Info>There are not information about movie cast </Info>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 16px;\n  padding: ${props => {\n    return props.padding && props.theme.spacing(5, 4);\n  }};\n`;\n\nexport const Header = styled.header`\n  position: sticky;\n  top: 0;\n  padding: 10px;\n  z-index: 2;\n  background-color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  align-items: baseline;\n  gap: 30px;\n\n  font-size: ${props => props.theme.fontSizes.medium};\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: #ffffff;\n  text-decoration: none;\n  padding: ${props => props.theme.spacing(2, 0)};\n  transition: text-decoration 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98);\n\n  :hover,\n  :focus {\n    text-decoration: underline overline #188064;\n    text-underline-offset: 8px;\n  }\n\n  &.active {\n    font-size: ${props => props.theme.fontSizes.large};\n    color: #abaf54;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Container, Header, Nav, StyledLink } from './Layout.styled';\n\nconst Layout = () => {\n  return (\n    <>\n      <Header>\n        <Container>\n          <Nav>\n            <StyledLink to=\"/\">Home</StyledLink>\n            <StyledLink to=\"/movies\">Movies</StyledLink>\n          </Nav>\n        </Container>\n      </Header>\n      <main>\n        <Container padding>\n          <Suspense fallback={<div>Please wait. We are in a process...</div>}>\n            <Outlet />\n          </Suspense>\n        </Container>\n      </main>\n    </>\n  );\n};\n\nexport default Layout;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  color: white;\n  display: flex;\n  flex-direction: column;\n  gap: ${props => props.theme.spacing(7)};\n`;\n\nexport const Info = styled.p`\n  font-style: italic;\n  color: white;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/movieAPI/movieAPI';\nimport { ReviewItem } from 'components';\nimport { Info, List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(data => {\n        setReviews(data);\n      })\n      .catch(console.log);\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length ? (\n        <List>\n          {reviews.map(review => (\n            <ReviewItem key={review.id} {...review} />\n          ))}\n        </List>\n      ) : (\n        <Info>There are not any reviews for this movie yet </Info>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import { TailSpin } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nconst Loader = ({ visible }) => {\n  return (\n    <TailSpin\n      height=\"60\"\n      width=\"60\"\n      color=\"#23aa6b\"\n      ariaLabel=\"tail-spin-loading\"\n      radius=\"1\"\n      wrapperStyle={{ margin: '0 auto' }}\n      visible={visible}\n    />\n  );\n};\n\nLoader.propTypes = {\n  visible: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const OutsideWrap = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 24px;\n  background-color: ${props => props.theme.colors.darkGrey};\n  border: 1px solid ${props => props.theme.colors.green};\n  border-radius: 12px;\n`;\n\nexport const ImgWrap = styled.div`\n  object-fit: cover;\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n  height: 400px;\n  object-fit: cover;\n`;\n\nexport const InsideWrap = styled.div`\n  font-size: 16px;\n  color: white;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: ${props => props.theme.spacing(4)};\n\n  font-size: 32px;\n  color: ${props => props.theme.colors.white};\n`;\n\nexport const Span = styled.span`\n  color: ${props => props.theme.colors.active};\n`;\n\nexport const SubTitle = styled.h3`\n  margin-top: 16px;\n  margin-bottom: 4px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 8px;\n  color: ${props => props.theme.colors.active};\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Img,\n  ImgWrap,\n  InsideWrap,\n  List,\n  MovieTitle,\n  OutsideWrap,\n  Span,\n  SubTitle,\n} from './Movie.styled';\n\nconst Movie = ({ movieData }) => {\n  return (\n    <>\n      <OutsideWrap>\n        <ImgWrap>\n          <Img src={movieData.src} alt={movieData.title} />\n        </ImgWrap>\n        <InsideWrap>\n          <MovieTitle>{movieData.title}</MovieTitle>\n          <div>\n            <p>\n              User score: <Span>{movieData.userScore}%</Span>\n            </p>\n            <SubTitle>Overview</SubTitle>\n            <p>{movieData.overview}</p>\n            <SubTitle>Genres</SubTitle>\n            <List>{movieData.genresList}</List>\n          </div>\n        </InsideWrap>\n      </OutsideWrap>\n    </>\n  );\n};\n\nMovie.propTypes = {\n  movieData: PropTypes.shape({\n    title: PropTypes.string,\n    src: PropTypes.string.isRequired,\n    userScore: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genresList: PropTypes.array.isRequired,\n  }).isRequired,\n};\n\nexport default Movie;\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst afterElementStyles = css`\n  content: '';\n  display: block;\n  width: 16%;\n  height: 2px;\n  background-color: #2bc098;\n  margin-top: 8px;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child)::after {\n    ${afterElementStyles}\n  }\n`;\n\nexport const Img = styled.img`\n  margin-bottom: 8px;\n\n  width: 200px;\n  height: 300px;\n  object-fit: cover;\n  border-radius: 12px;\n`;\n\nexport const Name = styled.h3`\n  margin-bottom: 4px;\n\n  font-size: 20px;\n  color: ${props => props.theme.colors.white};\n`;\n\nexport const Character = styled.p`\n  font-style: italic;\n  color: ${props => props.theme.colors.active};\n`;\n","import PropTypes from 'prop-types';\nimport { Character, Img, Item, Name } from './Actor.styled';\n\nconst Actor = ({ name, character, src }) => {\n  return (\n    <Item>\n      <Img src={src} alt={name} />\n      <Name>{name}</Name>\n      <Character>{character}</Character>\n    </Item>\n  );\n};\n\nActor.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n};\n\nexport default Actor;\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { BsPersonVideo2 } from 'react-icons/bs';\n\nconst afterElementStyles = css`\n  content: '';\n  display: block;\n  width: 16%;\n  height: 2px;\n  background-color: #188064;\n  margin-top: 8px;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child)::after {\n    ${afterElementStyles}\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 8px;\n`;\nexport const StyledIcon = styled(BsPersonVideo2)`\n  color: ${props => props.theme.colors.active};\n`;\n\nexport const Title = styled.h3`\n  color: ${props => props.theme.colors.active};\n`;\n\nexport const Content = styled.p`\n  color: ${props => props.theme.colors.lightGrey};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Content, Item, StyledIcon, Title, Wrapper } from './ReviewItem.styled';\n\nconst ReviewItem = ({ author, content }) => {\n  return (\n    <Item>\n      <Wrapper>\n        <StyledIcon />\n        <Title>{author}</Title>\n      </Wrapper>\n      <Content>{content}</Content>\n    </Item>\n  );\n};\n\nReviewItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nexport default ReviewItem;\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const LinkStyle = styled(Link)`\n  display: inline-block;\n  margin-bottom: 32px;\n  padding: 8px;\n\n  font-weight: 700;\n\n  background-color: #188064;\n  color: white;\n\n  border-radius: 4px;\n\n  transition: background-color 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98),\n    color 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98);\n\n  :hover,\n  :focus {\n    background-color: ${props => props.theme.colors.active};\n    color: ${props => props.theme.colors.grey};\n  }\n`;\n\nexport const Detail = styled.p`\n  margin-top: 28px;\n  margin-bottom: 14px;\n  font-size: 20px;\n  font-weight: 700;\n  color: ${props => props.theme.colors.white};\n  text-transform: uppercase;\n`;\n\nexport const LinkList = styled.ul`\n  display: flex;\n  align-items: baseline;\n  gap: 12px;\n  margin-bottom: 14px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 18px;\n  color: #ffffff;\n  text-decoration: underline #188064;\n\n  transition: transform 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98);\n\n  :hover,\n  :focus {\n    transform: scale(1.02);\n  }\n\n  &.active {\n    color: #28b48f;\n    font-size: 24px;\n  }\n`;\n","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Loader, Movie } from 'components';\nimport { fetchMovie } from 'services/movieAPI/movieAPI';\nimport { Detail, LinkList, LinkStyle, StyledLink } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backUpLinkRef = useRef(location.state?.from ?? '/movies');\n\n  const [movieData, setMovieData] = useState(null);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    setShowLoader(true);\n    fetchMovie(Number(movieId))\n      .then(setMovieData)\n      .catch(console.log)\n      .finally(() => setShowLoader(false));\n  }, [movieId]);\n\n  return (\n    <section>\n      <LinkStyle to={backUpLinkRef.current}>Back to</LinkStyle>\n      {showLoader && <Loader visible={showLoader} />}\n      {movieData && <Movie movieData={movieData} />}\n      <Detail>Additional information</Detail>\n      <LinkList>\n        <li>\n          <StyledLink to=\"cast\">Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n        </li>\n      </LinkList>\n      <Suspense fallback={<div>Please wait. We are in a process...</div>}>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'api_key=ff432fdbfbbc40783dc9bfdd803ea5e1';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}trending/all/day?${KEY}`);\n    const moviesList = response.data.results.map(\n      ({ id, name, title, poster_path, release_date }) => {\n        let titleName = title || name;\n        if (titleName.length > 25) {\n          titleName = titleName.substring(0, 22) + '...';\n        }\n        let src = poster_path\n          ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n          : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg';\n        return { id, titleName, src };\n      }\n    );\n    return moviesList;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovie = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}?${KEY}`);\n\n    const { poster_path, title, vote_average, overview, genres } =\n      response.data;\n    const src = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg';\n    const userScore = Math.ceil(vote_average * 10);\n\n    const genresList = genres.map(({ id, name }) => <li key={id}>{name}</li>);\n\n    return { src, title, userScore, overview, genresList };\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?${KEY}`\n    );\n\n    const cast = response.data.cast.map(\n      ({ name, character, id, profile_path }) => {\n        const src = profile_path\n          ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n          : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg';\n        return {\n          name,\n          character,\n          id,\n          src,\n        };\n      }\n    );\n    return cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?${KEY}`\n    );\n\n    const reviews = response.data.results.map(({ author, id, content }) => ({\n      author,\n      id,\n      content,\n    }));\n\n    return reviews;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesByName = async movieName => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?query=${movieName}&include_adult=false&language=en-US&page=1&${KEY}`\n    );\n    const moviesList = response.data.results.map(\n      ({ id, name, title, poster_path }) => {\n        let titleName = title || name;\n        if (titleName.length > 25) {\n          titleName = titleName.substring(0, 22) + '...';\n        }\n        let src = poster_path\n          ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n          : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg';\n        return { id, titleName, src };\n      }\n    );\n    return moviesList;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["List","styled","Info","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","then","catch","console","log","length","map","actorInfo","id","Container","props","padding","theme","spacing","Header","Nav","fontSizes","medium","StyledLink","NavLink","large","to","Suspense","fallback","reviews","setReviews","fetchReviews","data","review","visible","height","width","color","ariaLabel","radius","wrapperStyle","margin","OutsideWrap","colors","darkGrey","green","ImgWrap","Img","InsideWrap","MovieTitle","white","Span","active","SubTitle","movieData","src","alt","title","userScore","overview","genresList","afterElementStyles","css","Item","Name","Character","name","character","Wrapper","StyledIcon","BsPersonVideo2","Title","Content","lightGrey","author","content","LinkStyle","Link","grey","Detail","LinkList","location","useLocation","backUpLinkRef","useRef","state","from","setMovieData","showLoader","setShowLoader","fetchMovie","Number","finally","current","BASE_URL","KEY","fetchTrendingMovies","axios","response","moviesList","results","poster_path","titleName","release_date","substring","message","vote_average","genres","Math","ceil","profile_path","fetchMoviesByName","movieName"],"sourceRoot":""}