{"version":3,"file":"static/js/880.020f0b19.chunk.js","mappings":"oQAEaA,EAAaC,EAAAA,EAAAA,KAAH,gDAIVC,EAAQD,EAAAA,EAAAA,MAAH,wPAEA,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IACV,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IACN,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IACE,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAKN,SAAAF,GAAK,OAAIA,EAAMC,MAAME,QAAQC,OAAxB,IAIVC,EAASP,EAAAA,EAAAA,OAAH,4UACN,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAG,EAA3B,IAIP,SAAAF,GAAK,OAAIA,EAAMC,MAAMK,OAAOC,UAAvB,IACM,SAAAP,GAAK,OAAIA,EAAMC,MAAMK,OAAOE,KAAvB,IACR,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAMA,SAAAF,GAAK,OAAIA,EAAMC,MAAMK,OAAOG,MAAvB,IAChB,SAAAT,GAAK,OAAIA,EAAMC,MAAMK,OAAOI,IAAvB,IAILC,EAAOb,EAAAA,EAAAA,KAAH,8EAED,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IACV,SAAAF,GAAK,OAAIA,EAAMC,MAAMK,OAAOG,MAAvB,I,SCfhB,EAtBa,SAAC,GAAsB,IAApBG,EAAmB,EAAnBA,aACd,GAKIC,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAQf,OACE,UAACpB,EAAD,CAAYsB,SAAUJ,GANP,SAAAK,GACfR,EAAaQ,GACbJ,EAAM,CAAEK,MAAO,IAChB,IAGC,WACE,SAACtB,GAAD,UAAWe,EAAS,QAAS,CAAEQ,UAAU,OACzC,SAACjB,EAAD,CAAQkB,KAAK,SAAb,SAAsB,WACrBN,EAAOI,QAAS,SAACV,EAAD,UAAM,6BAG5B,E,6BCWD,EA5Be,WACb,OAAwCa,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,SAEnC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WACHP,IAELQ,EAAAA,EAAAA,IAAkBR,GACfS,KAAKL,GACLM,SAAQ,kBAAMJ,GAAc,EAApB,GACZ,GAAE,CAACN,IAMJ,OACE,gCACE,SAAC,EAAD,CAAMf,aANW,SAAA0B,GACnBZ,EAAgBY,EACjB,KAKG,SAAC,KAAD,CAAQC,QAASP,IAChBL,EAAUa,OAAS,IAAK,SAACC,EAAA,EAAD,CAAWX,OAAQA,MAGjD,C","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  margin-bottom: 32px;\n`;\n\nexport const Field = styled.input`\n  display: inline-block;\n  margin-right: ${props => props.theme.spacing(2)};\n  padding: ${props => props.theme.spacing(2)};\n  height: ${props => props.theme.spacing(9)};\n  border-radius: ${props => props.theme.spacing(1)};\n  transition: box-shadow 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98);\n\n  :hover,\n  :focus {\n    box-shadow: ${props => props.theme.shadows.regular};\n  }\n`;\n\nexport const Button = styled.button`\n  padding: ${props => props.theme.spacing(2, 2)};\n\n  font-weight: 700;\n\n  color: ${props => props.theme.colors.ghostWhite};\n  background-color: ${props => props.theme.colors.green};\n  border-radius: ${props => props.theme.spacing(1)};\n  transition: background-color 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98),\n    color 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98);\n\n  :hover,\n  :focus {\n    background-color: ${props => props.theme.colors.active};\n    color: ${props => props.theme.colors.grey};\n  }\n`;\n\nexport const Span = styled.span`\n  display: block;\n  margin-top: ${props => props.theme.spacing(1)};\n  color: ${props => props.theme.colors.active};\n`;\n","// import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button, Field, Span, StyledForm } from './Form.styled';\n\nconst Form = ({ updateParams }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = data => {\n    updateParams(data);\n    reset({ query: '' });\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <Field {...register('query', { required: true })} />\n      <Button type=\"submit\">Search</Button>\n      {errors.query && <Span>This field is required</Span>}\n    </StyledForm>\n  );\n};\n\nexport default Form;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Form from 'components/Form/Form';\nimport { Loader } from 'components';\nimport { fetchMoviesByName } from 'services/movieAPI/movieAPI';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieList = searchParams.get('query');\n\n  const [movies, setMovies] = useState([]);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    if (!movieList) return;\n\n    fetchMoviesByName(movieList)\n      .then(setMovies)\n      .finally(() => setShowLoader(false));\n  }, [movieList]);\n\n  const updateParams = params => {\n    setSearchParams(params);\n  };\n\n  return (\n    <section>\n      <Form updateParams={updateParams} />\n      <Loader visible={showLoader} />\n      {movieList.length > 0 && <MovieList movies={movies} />}\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["StyledForm","styled","Field","props","theme","spacing","shadows","regular","Button","colors","ghostWhite","green","active","grey","Span","updateParams","useForm","register","handleSubmit","reset","errors","formState","onSubmit","data","query","required","type","useSearchParams","searchParams","setSearchParams","movieList","get","useState","movies","setMovies","showLoader","setShowLoader","useEffect","fetchMoviesByName","then","finally","params","visible","length","MovieList"],"sourceRoot":""}